{"ast":null,"code":"var _jsxFileName = \"/Users/khanhmai/side_projects/retro/components/cardList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Card from './card';\nimport ButtonAdd from './elements/buttonAdd';\nimport TextBox from './elements/textBox';\nimport { useState } from 'react';\nexport default function CardList(props) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    cards: [],\n    showTextBox: false\n  });\n\n  const buttonAddHandler = () => {\n    setState(...state, {\n      showTextBox: true\n    });\n    console.log('showTextBox', showTextBox);\n  };\n\n  const addCard = text => {\n    setState(...state, {\n      cards: cards.concat([text])\n    });\n    setState(...state, {\n      showTextBox: false\n    });\n  };\n\n  const onDeleteHandler = key => {\n    console.log('key', key);\n    setState(...state, {\n      cards: cards.splice(key, 1)\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.title), cards.map((card, index) => {\n    return __jsx(Card, {\n      onDelete: onDeleteHandler,\n      cardIndex: index,\n      key: index,\n      content: card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }), __jsx(ButtonAdd, {\n    onClick: buttonAddHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), showTextBox && __jsx(TextBox, {\n    submitText: addCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/khanhmai/side_projects/retro/components/cardList.js"],"names":["Card","ButtonAdd","TextBox","useState","CardList","props","state","setState","cards","showTextBox","buttonAddHandler","console","log","addCard","text","concat","onDeleteHandler","key","splice","title","map","card","index"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC;AACjCK,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,WAAW,EAAE;AAFoB,GAAD,CAAlC;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAW;AAACG,MAAAA,WAAW,EAAE;AAAd,KAAX,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BH,WAA1B;AACD,GAHD;;AAIA,QAAMI,OAAO,GAAIC,IAAD,IAAU;AACxBP,IAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAW;AAACE,MAAAA,KAAK,EAAEA,KAAK,CAACO,MAAN,CAAa,CAACD,IAAD,CAAb;AAAR,KAAX,CAAR;AACAP,IAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAW;AAACG,MAAAA,WAAW,EAAE;AAAd,KAAX,CAAR;AACD,GAHD;;AAIA,QAAMO,eAAe,GAAIC,GAAD,IAAS;AAC/BN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBK,GAAlB;AACAV,IAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAW;AAACE,MAAAA,KAAK,EAAEA,KAAK,CAACU,MAAN,CAAaD,GAAb,EAAiB,CAAjB;AAAR,KAAX,CAAR;AACD,GAHD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,KAAK,CAACc,KAAV,CADF,EAGIX,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,WAAO,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAEN,eAAhB;AAAiC,MAAA,SAAS,EAAEM,KAA5C;AAAmD,MAAA,GAAG,EAAEA,KAAxD;AAA+D,MAAA,OAAO,EAAED,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAHJ,EAOE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEX,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EASID,WAAW,IACX,MAAC,OAAD;AAAS,IAAA,UAAU,EAAEI,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD","sourcesContent":["import Card from './card'\nimport ButtonAdd from './elements/buttonAdd'\nimport TextBox from './elements/textBox'\nimport {useState} from 'react'\nexport default function CardList(props) {\n  const [state, setState] = useState({\n    cards: [],\n    showTextBox: false\n  })\n  const buttonAddHandler = () => {\n    setState(...state, {showTextBox: true})\n    console.log('showTextBox',showTextBox)\n  }\n  const addCard = (text) => {\n    setState(...state, {cards: cards.concat([text])})\n    setState(...state, {showTextBox: false})\n  }\n  const onDeleteHandler = (key) => {\n    console.log('key',key)\n    setState(...state, {cards: cards.splice(key,1)})\n  }  \n  return (\n    <div>\n      <p>{props.title}</p>\n      {\n        cards.map((card, index) => {\n          return <Card onDelete={onDeleteHandler} cardIndex={index} key={index} content={card}/>\n        })\n      }\n      <ButtonAdd onClick={buttonAddHandler}/>\n      {\n        showTextBox && \n        <TextBox submitText={addCard}/>\n      }\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}