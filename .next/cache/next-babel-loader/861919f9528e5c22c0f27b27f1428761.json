{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/khanhmai/side_projects/retro/components/cardList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Card from './card';\nimport ButtonAdd from './elements/buttonAdd';\nimport TextBox from './elements/textBox';\nimport { useReducer } from 'react';\nexport default function CardList(props) {\n  var _useReducer = useReducer(function (state, newState) {\n    return _objectSpread({}, state, {}, newState);\n  }, {\n    cards: [],\n    showTextBox: false\n  }),\n      state = _useReducer[0],\n      setState = _useReducer[1];\n\n  var buttonAddHandler = function buttonAddHandler() {\n    setState({\n      showTextBox: true\n    });\n  };\n\n  var addCard = function addCard(text) {\n    setState({\n      cards: state.cards.concat([text])\n    });\n    setState({\n      showTextBox: false\n    });\n  };\n\n  var onDeleteHandler = function onDeleteHandler(key) {\n    setState({\n      cards: state.cards.filter(function (card, index) {\n        return index !== key;\n      })\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.title), state.cards.map(function (card, index) {\n    return __jsx(Card, {\n      onDelete: onDeleteHandler,\n      cardIndex: index,\n      key: index,\n      content: card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }), __jsx(ButtonAdd, {\n    onClick: buttonAddHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), state.showTextBox && __jsx(TextBox, {\n    submitText: addCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/khanhmai/side_projects/retro/components/cardList.js"],"names":["Card","ButtonAdd","TextBox","useReducer","CardList","props","state","newState","cards","showTextBox","setState","buttonAddHandler","addCard","text","concat","onDeleteHandler","key","filter","card","index","title","map"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,oBACZF,UAAU,CAAC,UAACG,KAAD,EAAQC,QAAR;AAAA,6BAA0BD,KAA1B,MAAoCC,QAApC;AAAA,GAAD,EAAgD;AAClFC,IAAAA,KAAK,EAAE,EAD2E;AAElFC,IAAAA,WAAW,EAAE;AAFqE,GAAhD,CADE;AAAA,MAC/BH,KAD+B;AAAA,MACxBI,QADwB;;AAKtC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,QAAQ,CAAC;AAACD,MAAAA,WAAW,EAAE;AAAd,KAAD,CAAR;AACD,GAFD;;AAGA,MAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AACxBH,IAAAA,QAAQ,CAAC;AAACF,MAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYM,MAAZ,CAAmB,CAACD,IAAD,CAAnB;AAAR,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAACD,MAAAA,WAAW,EAAE;AAAd,KAAD,CAAR;AACD,GAHD;;AAIA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAS;AAC/BN,IAAAA,QAAQ,CAAC;AAACF,MAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYS,MAAZ,CAAmB,UAACC,IAAD,EAAOC,KAAP;AAAA,eAAiBA,KAAK,KAAKH,GAA3B;AAAA,OAAnB;AAAR,KAAD,CAAR;AACD,GAFD;;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,KAAK,CAACe,KAAV,CADF,EAGId,KAAK,CAACE,KAAN,CAAYa,GAAZ,CAAgB,UAACH,IAAD,EAAOC,KAAP,EAAiB;AAC/B,WAAO,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAEJ,eAAhB;AAAiC,MAAA,SAAS,EAAEI,KAA5C;AAAmD,MAAA,GAAG,EAAEA,KAAxD;AAA+D,MAAA,OAAO,EAAED,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAHJ,EAOE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEP,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EASIL,KAAK,CAACG,WAAN,IACA,MAAC,OAAD;AAAS,IAAA,UAAU,EAAEG,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD","sourcesContent":["import Card from './card'\nimport ButtonAdd from './elements/buttonAdd'\nimport TextBox from './elements/textBox'\nimport {useReducer} from 'react'\nexport default function CardList(props) {\n  const [state, setState] = useReducer((state, newState) => ({...state, ...newState}),{\n    cards: [],\n    showTextBox: false\n  })\n  const buttonAddHandler = () => {\n    setState({showTextBox: true})\n  }\n  const addCard = (text) => {\n    setState({cards: state.cards.concat([text])})\n    setState({showTextBox: false})\n  }\n  const onDeleteHandler = (key) => {\n    setState({cards: state.cards.filter((card, index) => index !== key)})\n  }  \n  return (\n    <div>\n      <p>{props.title}</p>\n      {\n        state.cards.map((card, index) => {\n          return <Card onDelete={onDeleteHandler} cardIndex={index} key={index} content={card}/>\n        })\n      }\n      <ButtonAdd onClick={buttonAddHandler}/>\n      {\n        state.showTextBox && \n        <TextBox submitText={addCard}/>\n      }\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}