{"ast":null,"code":"var _jsxFileName = \"/Users/khanhmai/side_projects/retro/components/cardList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Card from './card';\nimport ButtonAdd from './elements/buttonAdd';\nimport TextBox from './elements/textBox';\nimport { useState } from 'react';\nexport default function CardList(props, state) {\n  var _useState = useState([]),\n      cards = _useState[0],\n      setCards = _useState[1];\n\n  var _useState2 = useState(false),\n      showTextBox = _useState2[0],\n      setShowTextBox = _useState2[1];\n\n  var buttonAddHandler = function buttonAddHandler() {\n    setShowTextBox(true);\n    console.log('showTextBox', showTextBox);\n  };\n\n  var addCard = function addCard(text) {\n    setCards(cards.concat([text]));\n    setShowTextBox(false);\n  };\n\n  var onDeleteHandler = function onDeleteHandler(key) {\n    console.log('key', key);\n    setCards(cards.splice(key, key + 1));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.title), cards.map(function (card, index) {\n    return __jsx(Card, {\n      onDelete: onDeleteHandler,\n      cardIndex: index,\n      key: index,\n      content: card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }), __jsx(ButtonAdd, {\n    onClick: buttonAddHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), showTextBox && __jsx(TextBox, {\n    submitText: addCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/khanhmai/side_projects/retro/components/cardList.js"],"names":["Card","ButtonAdd","TextBox","useState","CardList","props","state","cards","setCards","showTextBox","setShowTextBox","buttonAddHandler","console","log","addCard","text","concat","onDeleteHandler","key","splice","title","map","card","index"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;AAAA,kBACnBH,QAAQ,CAAC,EAAD,CADW;AAAA,MACtCI,KADsC;AAAA,MAC/BC,QAD+B;;AAAA,mBAEPL,QAAQ,CAAC,KAAD,CAFD;AAAA,MAEtCM,WAFsC;AAAA,MAEzBC,cAFyB;;AAG7C,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BJ,WAA1B;AACD,GAHD;;AAIA,MAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AACxBP,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,CAACD,IAAD,CAAb,CAAD,CAAR;AACAL,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAHD;;AAIA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAS;AAC/BN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBK,GAAlB;AACAV,IAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAaD,GAAb,EAAiBA,GAAG,GAAC,CAArB,CAAD,CAAR;AACD,GAHD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIb,KAAK,CAACe,KAAV,CADF,EAGIb,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACzB,WAAO,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAEN,eAAhB;AAAiC,MAAA,SAAS,EAAEM,KAA5C;AAAmD,MAAA,GAAG,EAAEA,KAAxD;AAA+D,MAAA,OAAO,EAAED,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAHJ,EAOE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEX,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EASIF,WAAW,IACX,MAAC,OAAD;AAAS,IAAA,UAAU,EAAEK,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD","sourcesContent":["import Card from './card'\nimport ButtonAdd from './elements/buttonAdd'\nimport TextBox from './elements/textBox'\nimport {useState} from 'react'\nexport default function CardList(props, state) {\n  const [cards, setCards] = useState([])\n  const [showTextBox, setShowTextBox] = useState(false)\n  const buttonAddHandler = () => {\n    setShowTextBox(true)\n    console.log('showTextBox',showTextBox)\n  }\n  const addCard = (text) => {\n    setCards(cards.concat([text]))\n    setShowTextBox(false)\n  }\n  const onDeleteHandler = (key) => {\n    console.log('key',key)\n    setCards(cards.splice(key,key+1))\n  }  \n  return (\n    <div>\n      <p>{props.title}</p>\n      {\n        cards.map((card, index) => {\n          return <Card onDelete={onDeleteHandler} cardIndex={index} key={index} content={card}/>\n        })\n      }\n      <ButtonAdd onClick={buttonAddHandler}/>\n      {\n        showTextBox && \n        <TextBox submitText={addCard}/>\n      }\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}